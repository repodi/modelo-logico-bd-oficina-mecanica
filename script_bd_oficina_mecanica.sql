-- Criação de banco de dados para o cenário oficina_mecanica
create database oficina_mecanica; 

use oficina_mecanica; 

-- criação da tabela cliente 

CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`CLIENTE` (
  `CLI_ID` INT NOT NULL,
  `CLI_CPFCNPJ` VARCHAR(14) NOT NULL,
  `CLI_NOME` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`CLI_ID`),
  UNIQUE INDEX `CLI_CPFCNPJ_UNIQUE` (`CLI_CPFCNPJ` ASC) VISIBLE);
  
  -- criação de tabela veículo 
  
  CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`VEICULO` (
  `VEI_ID` INT NOT NULL,
  `CLI_CLI_ID` INT NOT NULL,
  `VEI_PLACA` VARCHAR(10) NOT NULL,
  `VEI_MARCA` VARCHAR(50) NULL,
  `VEI_MODELO` VARCHAR(100) NULL,
  `VEI_CLI_ID` INT NOT NULL,
  PRIMARY KEY (`VEI_ID`, `VEI_CLI_ID`),
  UNIQUE INDEX `VEI_PLACA_UNIQUE` (`VEI_PLACA` ASC) VISIBLE,
  INDEX `fk_VEICULO_CLIENTE1_idx` (`VEI_CLI_ID` ASC) VISIBLE,
  CONSTRAINT `fk_VEICULO_CLIENTE1`
    FOREIGN KEY (`VEI_CLI_ID`)
    REFERENCES `oficina_mecanica`.`CLIENTE` (`CLI_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
    
    -- criação de tabela mecânico 
    
    CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`MECANICO` (
  `MEC_ID` INT NOT NULL,
  `MEC_CODIGO` VARCHAR(15) NOT NULL,
  `MEC_ENDERECO` VARCHAR(200) NULL,
  `MEC_ESPECIALIDADE` VARCHAR(100) NULL,
  PRIMARY KEY (`MEC_ID`),
  UNIQUE INDEX `MEC_CODIGO_UNIQUE` (`MEC_CODIGO` ASC) VISIBLE);
  
  -- criação de tabela pedido 
  
  CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`PEDIDO` (
  `PED_ID` INT NOT NULL,
  `PED_CLI_ID` INT NOT NULL,
  `PED_VEI_ID` INT NOT NULL,
  `PED_DATA` DATE NOT NULL,
  `PED_DESCRICAO` TEXT NULL,
  PRIMARY KEY (`PED_ID`, `PED_CLI_ID`, `PED_VEI_ID`),
  INDEX `fk_CLIENTE_has_MECANICO_CLIENTE1_idx` (`PED_CLI_ID` ASC) VISIBLE,
  INDEX `fk_PEDIDO_VEICULO1_idx` (`PED_VEI_ID` ASC) VISIBLE,
  CONSTRAINT `fk_CLIENTE_has_MECANICO_CLIENTE1`
    FOREIGN KEY (`PED_CLI_ID`)
    REFERENCES `oficina_mecanica`.`CLIENTE` (`CLI_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PEDIDO_VEICULO1`
    FOREIGN KEY (`PED_VEI_ID`)
    REFERENCES `oficina_mecanica`.`VEICULO` (`VEI_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
    
    -- criação de tabela equipe mecânica pedido
    
    CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`EQUIPE_MECANICA_PEDIDO` (
  `EMP_ID` INT NOT NULL,
  `EMP_PED_ID` INT NOT NULL,
  `EMP_MEC_ID` INT NOT NULL,
  `EMP_AVALIACAO` TEXT NULL,
  `EMP_DATA` DATE NULL,
  PRIMARY KEY (`EMP_ID`, `EMP_PED_ID`, `EMP_MEC_ID`),
  INDEX `fk_PEDIDO_has_MECANICO_MECANICO1_idx` (`EMP_MEC_ID` ASC) VISIBLE,
  INDEX `fk_PEDIDO_has_MECANICO_PEDIDO1_idx` (`EMP_PED_ID` ASC) VISIBLE,
  CONSTRAINT `fk_PEDIDO_has_MECANICO_PEDIDO1`
    FOREIGN KEY (`EMP_PED_ID`)
    REFERENCES `oficina_mecanica`.`PEDIDO` (`PED_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PEDIDO_has_MECANICO_MECANICO1`
    FOREIGN KEY (`EMP_MEC_ID`)
    REFERENCES `oficina_mecanica`.`MECANICO` (`MEC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
    
    
    -- criação de tabela peça 
    
    CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`PECA` (
  `PEC_ID` INT NOT NULL,
  `PEC_CODIGO` VARCHAR(20) NOT NULL,
  `PEC_NOME` VARCHAR(100) NOT NULL,
  `PEC_PRECO` DECIMAL(18,2) NOT NULL,
  PRIMARY KEY (`PEC_ID`),
  UNIQUE INDEX `PEC_CODIGO_UNIQUE` (`PEC_CODIGO` ASC) VISIBLE);
    
    -- criação de tabela mão de obra 
    CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`MAO_OBRA` (
  `MAO_ID` INT NOT NULL,
  `MAO_NOME` VARCHAR(100) NOT NULL,
  `MAO_PRECO` DECIMAL(18,2) NOT NULL,
  PRIMARY KEY (`MAO_ID`));
  
  -- criação de tabela orçamento 
  
  CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`ORCAMENTO` (
  `ORC_ID` INT NOT NULL,
  `ORC_DATA` DATE NOT NULL,
  `ORC_DATA_ENTREGA` DATE NULL,
  `ORC_VALOR_TOTAL` DECIMAL(18,2) NOT NULL,
  `ORC_STATUS` VARCHAR(50) NOT NULL DEFAULT 'ABERTO',
  `ORC_MEC_ID_RESPONSAVEL` INT NOT NULL,
  PRIMARY KEY (`ORC_ID`),
  INDEX `fk_ORCAMENTO_MECANICO1_idx` (`ORC_MEC_ID_RESPONSAVEL` ASC) VISIBLE,
  CONSTRAINT `fk_ORCAMENTO_MECANICO1`
    FOREIGN KEY (`ORC_MEC_ID_RESPONSAVEL`)
    REFERENCES `oficina_mecanica`.`MECANICO` (`MEC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
    
    -- criação de tabela peça x orçamento
    
    CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`PECA_ORCAMENTO` (
  `PEO_ID` INT NOT NULL,
  `PEO_ORC_ID` INT NOT NULL,
  `PEO_PRECO` DECIMAL(18,2) NULL,
  `PEO_PEC_ID` INT NOT NULL,
  PRIMARY KEY (`PEO_ID`),
  INDEX `fk_ITEM_PECA_ORCAMENTO1_idx` (`PEO_ORC_ID` ASC) VISIBLE,
  INDEX `fk_ITEM_PECA_PECA1_idx` (`PEO_PEC_ID` ASC) VISIBLE,
  CONSTRAINT `fk_ITEM_PECA_ORCAMENTO1`
    FOREIGN KEY (`PEO_ORC_ID`)
    REFERENCES `oficina_mecanica`.`ORCAMENTO` (`ORC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ITEM_PECA_PECA1`
    FOREIGN KEY (`PEO_PEC_ID`)
    REFERENCES `oficina_mecanica`.`PECA` (`PEC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
    
    -- criação de tabela serviço x orçamento 
    
    CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`SERVICO_ORCAMENTO` (
  `SEO_ID` INT NOT NULL,
  `SEO_ORC_ID` INT NOT NULL,
  `SEO_PRECO` DECIMAL(18,2) NOT NULL,
  `SEO_MAO_ID` INT NOT NULL,
  PRIMARY KEY (`SEO_ID`, `SEO_ORC_ID`),
  INDEX `fk_SERVICO_ORCAMENTO_ORCAMENTO1_idx` (`SEO_ORC_ID` ASC) VISIBLE,
  INDEX `fk_SERVICO_ORCAMENTO_MAO_OBRA1_idx` (`SEO_MAO_ID` ASC) VISIBLE,
  CONSTRAINT `fk_SERVICO_ORCAMENTO_ORCAMENTO1`
    FOREIGN KEY (`SEO_ORC_ID`)
    REFERENCES `oficina_mecanica`.`ORCAMENTO` (`ORC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SERVICO_ORCAMENTO_MAO_OBRA1`
    FOREIGN KEY (`SEO_MAO_ID`)
    REFERENCES `oficina_mecanica`.`MAO_OBRA` (`MAO_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
    
    -- criação de tabela ordem serviço 
    
    CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`ORDEM_SERVICO` (
  `ORS_ID` INT NOT NULL,
  `ORS_ORC_ID` INT NOT NULL,
  `ORS_MEC_ID_RESPONSAVEL` INT NOT NULL,
  PRIMARY KEY (`ORS_ID`, `ORS_ORC_ID`, `ORS_MEC_ID_RESPONSAVEL`),
  INDEX `fk_ORDEM_SERVICO_ORCAMENTO1_idx` (`ORS_ORC_ID` ASC) VISIBLE,
  INDEX `fk_ORDEM_SERVICO_MECANICO1_idx` (`ORS_MEC_ID_RESPONSAVEL` ASC) VISIBLE,
  CONSTRAINT `fk_ORDEM_SERVICO_ORCAMENTO1`
    FOREIGN KEY (`ORS_ORC_ID`)
    REFERENCES `oficina_mecanica`.`ORCAMENTO` (`ORC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ORDEM_SERVICO_MECANICO1`
    FOREIGN KEY (`ORS_MEC_ID_RESPONSAVEL`)
    REFERENCES `oficina_mecanica`.`MECANICO` (`MEC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
    
    -- criação de tabela serviço x ordem de serviço 
    
    CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`SERVICO_ORDEM_SERVICO` (
  `SOS_ID` INT NOT NULL,
  `SOS_PRECO` DECIMAL(18,2) NOT NULL,
  `SOS_MAO_ID` INT NOT NULL,
  `SOS_ORS_ID` INT NOT NULL,
  PRIMARY KEY (`SOS_ID`),
  INDEX `fk_SERVICO_ORDEM_SERVICO_MAO_OBRA1_idx` (`SOS_MAO_ID` ASC) VISIBLE,
  INDEX `fk_SERVICO_ORDEM_SERVICO_ORDEM_SERVICO1_idx` (`SOS_ORS_ID` ASC) VISIBLE,
  CONSTRAINT `fk_SERVICO_ORDEM_SERVICO_MAO_OBRA1`
    FOREIGN KEY (`SOS_MAO_ID`)
    REFERENCES `oficina_mecanica`.`MAO_OBRA` (`MAO_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SERVICO_ORDEM_SERVICO_ORDEM_SERVICO1`
    FOREIGN KEY (`SOS_ORS_ID`)
    REFERENCES `oficina_mecanica`.`ORDEM_SERVICO` (`ORS_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
    
    -- criação de tabela peça x ordem de serviço 
    
    CREATE TABLE IF NOT EXISTS `oficina_mecanica`.`PECA_ORDEM_SERVICO` (
  `POS_ID` INT NOT NULL,
  `POS_PRECO` DECIMAL(18,2) NULL,
  `POS_PEC_ID` INT NOT NULL,
  `POS_ORS_ID` INT NOT NULL,
  PRIMARY KEY (`POS_ID`),
  INDEX `fk_PECA_ORDEM_SERVICO_PECA1_idx` (`POS_PEC_ID` ASC) VISIBLE,
  INDEX `fk_PECA_ORDEM_SERVICO_ORDEM_SERVICO1_idx` (`POS_ORS_ID` ASC) VISIBLE,
  CONSTRAINT `fk_PECA_ORDEM_SERVICO_PECA1`
    FOREIGN KEY (`POS_PEC_ID`)
    REFERENCES `oficina_mecanica`.`PECA` (`PEC_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PECA_ORDEM_SERVICO_ORDEM_SERVICO1`
    FOREIGN KEY (`POS_ORS_ID`)
    REFERENCES `oficina_mecanica`.`ORDEM_SERVICO` (`ORS_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);